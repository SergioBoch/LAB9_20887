

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Mon Apr 25 18:11:14 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0012                     _T2CONbits	set	18
   207  0008                     _PORTD	set	8
   208  0005                     _PORTA	set	5
   209  0008                     _PORTDbits	set	8
   210  0001                     _TMR0	set	1
   211  000B                     _INTCONbits	set	11
   212  001D                     _CCP2CONbits	set	29
   213  001B                     _CCPR2L	set	27
   214  0017                     _CCP1CONbits	set	23
   215  001E                     _ADRESH	set	30
   216  0015                     _CCPR1L	set	21
   217  001F                     _ADCON0bits	set	31
   218  000C                     _PIR1bits	set	12
   219  008C                     _PIE1bits	set	140
   220  0092                     _PR2	set	146
   221  0087                     _TRISCbits	set	135
   222  009F                     _ADCON1bits	set	159
   223  0081                     _OPTION_REGbits	set	129
   224  008F                     _OSCCONbits	set	143
   225  0088                     _TRISD	set	136
   226  0085                     _TRISA	set	133
   227  0189                     _ANSELH	set	393
   228  0188                     _ANSEL	set	392
   229                           
   230                           	psect	cinit
   231  000F                     start_initialization:	
   232                           ; #config settings
   233                           
   234  000F                     __initialization:
   235                           
   236                           ; Clear objects allocated to COMMON
   237  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   238  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   239  0011                     end_of_initialization:	
   240                           ;End of C runtime variable initialization code
   241                           
   242  0011                     __end_of__initialization:
   243  0011  0183               	clrf	3
   244  0012  120A  118A  28DE   	ljmp	_main	;jump to C main() function
   245                           
   246                           	psect	bssCOMMON
   247  0076                     __pbssCOMMON:
   248  0076                     _VALOR:
   249  0076                     	ds	1
   250  0077                     _REGISTRO:
   251  0077                     	ds	1
   252                           
   253                           	psect	cstackCOMMON
   254  0070                     __pcstackCOMMON:
   255  0070                     ?_setup:
   256  0070                     ?_isr:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ??_isr:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ?_main:	
   263                           ; 1 bytes @ 0x0
   264                           
   265                           
   266                           ; 1 bytes @ 0x0
   267  0070                     	ds	4
   268  0074                     ??_setup:
   269                           
   270                           ; 1 bytes @ 0x4
   271  0074                     	ds	1
   272  0075                     ??_main:
   273                           
   274                           ; 1 bytes @ 0x5
   275  0075                     	ds	1
   276                           
   277                           	psect	maintext
   278  00DE                     __pmaintext:	
   279 ;;
   280 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   281 ;;
   282 ;; *************** function _main *****************
   283 ;; Defined at:
   284 ;;		line 64 in file "main.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;		None
   287 ;; Auto vars:     Size  Location     Type
   288 ;;		None
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, status,2, status,0, pclath, cstack
   293 ;; Tracked objects:
   294 ;;		On entry : B00/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   298 ;;      Params:         0       0       0       0       0
   299 ;;      Locals:         0       0       0       0       0
   300 ;;      Temps:          1       0       0       0       0
   301 ;;      Totals:         1       0       0       0       0
   302 ;;Total ram usage:        1 bytes
   303 ;; Hardware stack levels required when called: 2
   304 ;; This function calls:
   305 ;;		_setup
   306 ;; This function is called by:
   307 ;;		Startup code after reset
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311  00DE                     _main:	
   312                           ;psect for function _main
   313                           
   314  00DE                     l778:	
   315                           ;incstack = 0
   316                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   317                           
   318                           
   319                           ;main.c: 65:     setup();
   320  00DE  120A  118A  207E  120A  118A  	fcall	_setup
   321  00E3                     l780:
   322                           
   323                           ;main.c: 66:     ADCON0bits.GO = 1;
   324  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   325  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   326  00E5  149F               	bsf	31,1	;volatile
   327  00E6                     l782:
   328                           
   329                           ;main.c: 68:         _delay((unsigned long)((70)*(4000000/4000000.0)));
   330  00E6  3017               	movlw	23
   331  00E7  00F5               	movwf	??_main
   332  00E8                     u127:
   333  00E8  0BF5               	decfsz	??_main,f
   334  00E9  28E8               	goto	u127
   335  00EA                     l784:
   336                           
   337                           ;main.c: 69:         if(ADCON0bits.GO == 0){
   338  00EA  1283               	bcf	3,5	;RP0=0, select bank0
   339  00EB  1303               	bcf	3,6	;RP1=0, select bank0
   340  00EC  189F               	btfsc	31,1	;volatile
   341  00ED  28EF               	goto	u91
   342  00EE  28F0               	goto	u90
   343  00EF                     u91:
   344  00EF  28E6               	goto	l782
   345  00F0                     u90:
   346  00F0                     l786:
   347                           
   348                           ;main.c: 70:             if(ADCON0bits.CHS == 0)
   349  00F0  0C1F               	rrf	31,w	;volatile
   350  00F1  00F5               	movwf	??_main
   351  00F2  0C75               	rrf	??_main,w
   352  00F3  390F               	andlw	15
   353  00F4  3A00               	xorlw	0
   354  00F5  1D03               	skipz
   355  00F6  28F8               	goto	u101
   356  00F7  28F9               	goto	u100
   357  00F8                     u101:
   358  00F8  28FE               	goto	l790
   359  00F9                     u100:
   360  00F9                     l788:
   361                           
   362                           ;main.c: 71:                 ADCON0bits.CHS = 1;
   363  00F9  081F               	movf	31,w	;volatile
   364  00FA  39C3               	andlw	-61
   365  00FB  3804               	iorlw	4
   366  00FC  009F               	movwf	31	;volatile
   367  00FD  290E               	goto	l796
   368  00FE                     l790:
   369  00FE  0C1F               	rrf	31,w	;volatile
   370  00FF  00F5               	movwf	??_main
   371  0100  0C75               	rrf	??_main,w
   372  0101  390F               	andlw	15
   373  0102  3A01               	xorlw	1
   374  0103  1D03               	skipz
   375  0104  2906               	goto	u111
   376  0105  2907               	goto	u110
   377  0106                     u111:
   378  0106  290C               	goto	l794
   379  0107                     u110:
   380  0107                     l792:
   381                           
   382                           ;main.c: 73:                 ADCON0bits.CHS = 2;
   383  0107  081F               	movf	31,w	;volatile
   384  0108  39C3               	andlw	-61
   385  0109  3808               	iorlw	8
   386  010A  009F               	movwf	31	;volatile
   387  010B  290E               	goto	l796
   388  010C                     l794:
   389                           
   390                           ;main.c: 75:                 ADCON0bits.CHS = 0;
   391  010C  30C3               	movlw	-61
   392  010D  059F               	andwf	31,f	;volatile
   393  010E                     l796:
   394                           
   395                           ;main.c: 76:             _delay((unsigned long)((70)*(4000000/4000000.0)));
   396  010E  3017               	movlw	23
   397  010F  00F5               	movwf	??_main
   398  0110                     u137:
   399  0110  0BF5               	decfsz	??_main,f
   400  0111  2910               	goto	u137
   401  0112                     l798:
   402                           
   403                           ;main.c: 77:             ADCON0bits.GO = 1;
   404  0112  1283               	bcf	3,5	;RP0=0, select bank0
   405  0113  1303               	bcf	3,6	;RP1=0, select bank0
   406  0114  149F               	bsf	31,1	;volatile
   407  0115  28E6               	goto	l782
   408  0116  120A  118A  280C   	ljmp	start
   409  0119                     __end_of_main:
   410                           
   411                           	psect	text1
   412  007E                     __ptext1:	
   413 ;; *************** function _setup *****************
   414 ;; Defined at:
   415 ;;		line 82 in file "main.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2, status,0
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   429 ;;      Params:         0       0       0       0       0
   430 ;;      Locals:         0       0       0       0       0
   431 ;;      Temps:          1       0       0       0       0
   432 ;;      Totals:         1       0       0       0       0
   433 ;;Total ram usage:        1 bytes
   434 ;; Hardware stack levels used: 1
   435 ;; Hardware stack levels required when called: 1
   436 ;; This function calls:
   437 ;;		Nothing
   438 ;; This function is called by:
   439 ;;		_main
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443  007E                     _setup:	
   444                           ;psect for function _setup
   445                           
   446  007E                     l678:	
   447                           ;incstack = 0
   448                           ; Regs used in _setup: [wreg+status,2+status,0]
   449                           
   450                           
   451                           ;main.c: 84:     ANSEL = 0b00000111;
   452  007E  3007               	movlw	7
   453  007F  1683               	bsf	3,5	;RP0=1, select bank3
   454  0080  1703               	bsf	3,6	;RP1=1, select bank3
   455  0081  0088               	movwf	8	;volatile
   456  0082                     l680:
   457                           
   458                           ;main.c: 85:     ANSELH = 0;
   459  0082  0189               	clrf	9	;volatile
   460  0083                     l682:
   461                           
   462                           ;main.c: 87:     TRISA = 0xFF;
   463  0083  30FF               	movlw	255
   464  0084  1683               	bsf	3,5	;RP0=1, select bank1
   465  0085  1303               	bcf	3,6	;RP1=0, select bank1
   466  0086  0085               	movwf	5	;volatile
   467                           
   468                           ;main.c: 88:     TRISD = 0;
   469  0087  0188               	clrf	8	;volatile
   470                           
   471                           ;main.c: 90:     PORTA = 0;
   472  0088  1283               	bcf	3,5	;RP0=0, select bank0
   473  0089  1303               	bcf	3,6	;RP1=0, select bank0
   474  008A  0185               	clrf	5	;volatile
   475                           
   476                           ;main.c: 91:     PORTD = 0;
   477  008B  0188               	clrf	8	;volatile
   478  008C                     l684:
   479                           
   480                           ;main.c: 93:     OSCCONbits.IRCF = 0b0110;
   481  008C  1683               	bsf	3,5	;RP0=1, select bank1
   482  008D  1303               	bcf	3,6	;RP1=0, select bank1
   483  008E  080F               	movf	15,w	;volatile
   484  008F  398F               	andlw	-113
   485  0090  3860               	iorlw	96
   486  0091  008F               	movwf	15	;volatile
   487  0092                     l686:
   488                           
   489                           ;main.c: 94:     OSCCONbits.SCS = 1;
   490  0092  140F               	bsf	15,0	;volatile
   491  0093                     l688:
   492                           
   493                           ;main.c: 97:     OPTION_REGbits.T0CS = 0;
   494  0093  1281               	bcf	1,5	;volatile
   495  0094                     l690:
   496                           
   497                           ;main.c: 98:     OPTION_REGbits.T0SE = 0;
   498  0094  1201               	bcf	1,4	;volatile
   499  0095                     l692:
   500                           
   501                           ;main.c: 99:     OPTION_REGbits.PSA = 0;
   502  0095  1181               	bcf	1,3	;volatile
   503  0096                     l694:
   504                           
   505                           ;main.c: 100:     OPTION_REGbits.PS2 = 0;
   506  0096  1101               	bcf	1,2	;volatile
   507  0097                     l696:
   508                           
   509                           ;main.c: 101:     OPTION_REGbits.PS1 = 1;
   510  0097  1481               	bsf	1,1	;volatile
   511  0098                     l698:
   512                           
   513                           ;main.c: 102:     OPTION_REGbits.PS0 = 0;
   514  0098  1001               	bcf	1,0	;volatile
   515  0099                     l700:
   516                           
   517                           ;main.c: 103:     TMR0 = 250;
   518  0099  30FA               	movlw	250
   519  009A  1283               	bcf	3,5	;RP0=0, select bank0
   520  009B  1303               	bcf	3,6	;RP1=0, select bank0
   521  009C  0081               	movwf	1	;volatile
   522  009D                     l702:
   523                           
   524                           ;main.c: 105:     INTCONbits.T0IF = 0;
   525  009D  110B               	bcf	11,2	;volatile
   526  009E                     l704:
   527                           
   528                           ;main.c: 106:     INTCONbits.T0IE = 1;
   529  009E  168B               	bsf	11,5	;volatile
   530  009F                     l706:
   531                           
   532                           ;main.c: 108:     ADCON0bits.ADCS = 0b01;
   533  009F  081F               	movf	31,w	;volatile
   534  00A0  393F               	andlw	-193
   535  00A1  3840               	iorlw	64
   536  00A2  009F               	movwf	31	;volatile
   537  00A3                     l708:
   538                           
   539                           ;main.c: 109:     ADCON0bits.CHS = 0;
   540  00A3  30C3               	movlw	-61
   541  00A4  059F               	andwf	31,f	;volatile
   542  00A5                     l710:
   543                           
   544                           ;main.c: 110:     ADCON1bits.ADFM = 0;
   545  00A5  1683               	bsf	3,5	;RP0=1, select bank1
   546  00A6  1303               	bcf	3,6	;RP1=0, select bank1
   547  00A7  139F               	bcf	31,7	;volatile
   548  00A8                     l712:
   549                           
   550                           ;main.c: 111:     ADCON1bits.VCFG0 = 0;
   551  00A8  121F               	bcf	31,4	;volatile
   552  00A9                     l714:
   553                           
   554                           ;main.c: 112:     ADCON1bits.VCFG1 = 0;
   555  00A9  129F               	bcf	31,5	;volatile
   556  00AA                     l716:
   557                           
   558                           ;main.c: 115:     TRISCbits.TRISC2 = 1;
   559  00AA  1507               	bsf	7,2	;volatile
   560  00AB                     l718:
   561                           
   562                           ;main.c: 116:     TRISCbits.TRISC1 = 1;
   563  00AB  1487               	bsf	7,1	;volatile
   564  00AC                     l720:
   565                           
   566                           ;main.c: 117:     PR2 = 155;
   567  00AC  309B               	movlw	155
   568  00AD  0092               	movwf	18	;volatile
   569  00AE                     l722:
   570                           
   571                           ;main.c: 118:     CCP1CONbits.P1M = 0;
   572  00AE  303F               	movlw	-193
   573  00AF  1283               	bcf	3,5	;RP0=0, select bank0
   574  00B0  1303               	bcf	3,6	;RP1=0, select bank0
   575  00B1  0597               	andwf	23,f	;volatile
   576  00B2                     l724:
   577                           
   578                           ;main.c: 119:     CCP1CONbits.CCP1M = 0b1100;
   579  00B2  0817               	movf	23,w	;volatile
   580  00B3  39F0               	andlw	-16
   581  00B4  380C               	iorlw	12
   582  00B5  0097               	movwf	23	;volatile
   583  00B6                     l726:
   584                           
   585                           ;main.c: 120:     CCP2CONbits.CCP2M = 0b1100;
   586  00B6  081D               	movf	29,w	;volatile
   587  00B7  39F0               	andlw	-16
   588  00B8  380C               	iorlw	12
   589  00B9  009D               	movwf	29	;volatile
   590  00BA                     l728:
   591                           
   592                           ;main.c: 122:     CCPR1L = 0x0f;
   593  00BA  300F               	movlw	15
   594  00BB  0095               	movwf	21	;volatile
   595  00BC                     l730:
   596                           
   597                           ;main.c: 123:     CCP1CONbits.DC1B = 0;
   598  00BC  30CF               	movlw	-49
   599  00BD  0597               	andwf	23,f	;volatile
   600  00BE                     l732:
   601                           
   602                           ;main.c: 125:     CCPR2L = 0x0f;
   603  00BE  300F               	movlw	15
   604  00BF  009B               	movwf	27	;volatile
   605  00C0                     l734:
   606                           
   607                           ;main.c: 126:     CCP2CONbits.DC2B0 = 0;
   608  00C0  121D               	bcf	29,4	;volatile
   609  00C1                     l736:
   610                           
   611                           ;main.c: 128:     PIR1bits.TMR2IF = 0;
   612  00C1  108C               	bcf	12,1	;volatile
   613  00C2                     l738:
   614                           
   615                           ;main.c: 129:     T2CONbits.T2CKPS = 0b11;
   616  00C2  3003               	movlw	3
   617  00C3  0492               	iorwf	18,f	;volatile
   618  00C4                     l740:
   619                           
   620                           ;main.c: 131:     T2CONbits.TMR2ON = 1;
   621  00C4  1512               	bsf	18,2	;volatile
   622  00C5                     l83:	
   623                           ;main.c: 133:     while(PIR1bits.TMR2IF == 0);
   624                           
   625  00C5  1C8C               	btfss	12,1	;volatile
   626  00C6  28C8               	goto	u11
   627  00C7  28C9               	goto	u10
   628  00C8                     u11:
   629  00C8  28C5               	goto	l83
   630  00C9                     u10:
   631  00C9                     l85:
   632                           
   633                           ;main.c: 134:     PIR1bits.TMR1IF = 0;
   634  00C9  100C               	bcf	12,0	;volatile
   635                           
   636                           ;main.c: 136:     TRISCbits.TRISC2 = 0;
   637  00CA  1683               	bsf	3,5	;RP0=1, select bank1
   638  00CB  1303               	bcf	3,6	;RP1=0, select bank1
   639  00CC  1107               	bcf	7,2	;volatile
   640                           
   641                           ;main.c: 137:     TRISCbits.TRISC1 = 0;
   642  00CD  1087               	bcf	7,1	;volatile
   643                           
   644                           ;main.c: 139:     PIR1bits.ADIF = 0;
   645  00CE  1283               	bcf	3,5	;RP0=0, select bank0
   646  00CF  1303               	bcf	3,6	;RP1=0, select bank0
   647  00D0  130C               	bcf	12,6	;volatile
   648                           
   649                           ;main.c: 140:     PIE1bits.ADIE = 1;
   650  00D1  1683               	bsf	3,5	;RP0=1, select bank1
   651  00D2  1303               	bcf	3,6	;RP1=0, select bank1
   652  00D3  170C               	bsf	12,6	;volatile
   653                           
   654                           ;main.c: 141:     INTCONbits.PEIE = 1;
   655  00D4  170B               	bsf	11,6	;volatile
   656                           
   657                           ;main.c: 142:     INTCONbits.GIE = 1;
   658  00D5  178B               	bsf	11,7	;volatile
   659  00D6                     l742:
   660                           
   661                           ;main.c: 144:     _delay((unsigned long)((70)*(4000000/4000000.0)));
   662  00D6  3017               	movlw	23
   663  00D7  00F4               	movwf	??_setup
   664  00D8                     u147:
   665  00D8  0BF4               	decfsz	??_setup,f
   666  00D9  28D8               	goto	u147
   667  00DA                     l744:
   668                           
   669                           ;main.c: 145:     ADCON0bits.ADON = 1;
   670  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   671  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   672  00DC  141F               	bsf	31,0	;volatile
   673  00DD                     l86:
   674  00DD  0008               	return
   675  00DE                     __end_of_setup:
   676                           
   677                           	psect	text2
   678  0015                     __ptext2:	
   679 ;; *************** function _isr *****************
   680 ;; Defined at:
   681 ;;		line 35 in file "main.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, status,2, status,0
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   695 ;;      Params:         0       0       0       0       0
   696 ;;      Locals:         0       0       0       0       0
   697 ;;      Temps:          4       0       0       0       0
   698 ;;      Totals:         4       0       0       0       0
   699 ;;Total ram usage:        4 bytes
   700 ;; Hardware stack levels used: 1
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		Interrupt level 1
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708  0015                     _isr:	
   709                           ;psect for function _isr
   710                           
   711  0015                     i1l748:
   712                           
   713                           ;main.c: 36:     if(PIR1bits.ADIF){
   714  0015  1283               	bcf	3,5	;RP0=0, select bank0
   715  0016  1303               	bcf	3,6	;RP1=0, select bank0
   716  0017  1F0C               	btfss	12,6	;volatile
   717  0018  281A               	goto	u2_21
   718  0019  281B               	goto	u2_20
   719  001A                     u2_21:
   720  001A  2862               	goto	i1l766
   721  001B                     u2_20:
   722  001B                     i1l750:
   723                           
   724                           ;main.c: 37:         if(ADCON0bits.CHS == 0){
   725  001B  0C1F               	rrf	31,w	;volatile
   726  001C  00F0               	movwf	??_isr
   727  001D  0C70               	rrf	??_isr,w
   728  001E  390F               	andlw	15
   729  001F  3A00               	xorlw	0
   730  0020  1D03               	skipz
   731  0021  2823               	goto	u3_21
   732  0022  2824               	goto	u3_20
   733  0023                     u3_21:
   734  0023  283C               	goto	i1l756
   735  0024                     u3_20:
   736  0024                     i1l752:
   737                           
   738                           ;main.c: 39:             CCPR1L = (ADRESH>>1)+45;
   739  0024  081E               	movf	30,w	;volatile
   740  0025  00F0               	movwf	??_isr
   741  0026  1003               	clrc
   742  0027  0C70               	rrf	??_isr,w
   743  0028  3E2D               	addlw	45
   744  0029  0095               	movwf	21	;volatile
   745  002A                     i1l754:
   746                           
   747                           ;main.c: 40:             CCP1CONbits.DC1B1 = ADRESH % 0b01;
   748  002A  1297               	bcf	23,5	;volatile
   749                           
   750                           ;main.c: 41:             CCP1CONbits.DC1B0 = (ADRESH>>7);
   751  002B  081E               	movf	30,w	;volatile
   752  002C  00F0               	movwf	??_isr
   753  002D  3007               	movlw	7
   754  002E                     u4_25:
   755  002E  1003               	clrc
   756  002F  0CF0               	rrf	??_isr,f
   757  0030  3EFF               	addlw	-1
   758  0031  1D03               	skipz
   759  0032  282E               	goto	u4_25
   760  0033  0870               	movf	??_isr,w
   761  0034  00F1               	movwf	??_isr+1
   762  0035  0EF1               	swapf	??_isr+1,f
   763  0036  0817               	movf	23,w	;volatile
   764  0037  0671               	xorwf	??_isr+1,w
   765  0038  39EF               	andlw	-17
   766  0039  0671               	xorwf	??_isr+1,w
   767  003A  0097               	movwf	23	;volatile
   768                           
   769                           ;main.c: 42:         }
   770  003B  2861               	goto	i1l764
   771  003C                     i1l756:
   772  003C  0C1F               	rrf	31,w	;volatile
   773  003D  00F0               	movwf	??_isr
   774  003E  0C70               	rrf	??_isr,w
   775  003F  390F               	andlw	15
   776  0040  3A01               	xorlw	1
   777  0041  1D03               	skipz
   778  0042  2844               	goto	u5_21
   779  0043  2845               	goto	u5_20
   780  0044                     u5_21:
   781  0044  285D               	goto	i1l762
   782  0045                     u5_20:
   783  0045                     i1l758:
   784                           
   785                           ;main.c: 44:             CCPR2L = (ADRESH>>1)+45;
   786  0045  081E               	movf	30,w	;volatile
   787  0046  00F0               	movwf	??_isr
   788  0047  1003               	clrc
   789  0048  0C70               	rrf	??_isr,w
   790  0049  3E2D               	addlw	45
   791  004A  009B               	movwf	27	;volatile
   792  004B                     i1l760:
   793                           
   794                           ;main.c: 45:             CCP2CONbits.DC2B1 = ADRESH % 0b01;
   795  004B  129D               	bcf	29,5	;volatile
   796                           
   797                           ;main.c: 46:             CCP2CONbits.DC2B0 = (ADRESH>>7);
   798  004C  081E               	movf	30,w	;volatile
   799  004D  00F0               	movwf	??_isr
   800  004E  3007               	movlw	7
   801  004F                     u6_25:
   802  004F  1003               	clrc
   803  0050  0CF0               	rrf	??_isr,f
   804  0051  3EFF               	addlw	-1
   805  0052  1D03               	skipz
   806  0053  284F               	goto	u6_25
   807  0054  0870               	movf	??_isr,w
   808  0055  00F1               	movwf	??_isr+1
   809  0056  0EF1               	swapf	??_isr+1,f
   810  0057  081D               	movf	29,w	;volatile
   811  0058  0671               	xorwf	??_isr+1,w
   812  0059  39EF               	andlw	-17
   813  005A  0671               	xorwf	??_isr+1,w
   814  005B  009D               	movwf	29	;volatile
   815                           
   816                           ;main.c: 47:         }
   817  005C  2861               	goto	i1l764
   818  005D                     i1l762:
   819                           
   820                           ;main.c: 49:             REGISTRO = ADRESH;
   821  005D  081E               	movf	30,w	;volatile
   822  005E  00F0               	movwf	??_isr
   823  005F  0870               	movf	??_isr,w
   824  0060  00F7               	movwf	_REGISTRO
   825  0061                     i1l764:
   826                           
   827                           ;main.c: 50:         PIR1bits.ADIF = 0;
   828  0061  130C               	bcf	12,6	;volatile
   829  0062                     i1l766:
   830                           
   831                           ;main.c: 52:     if(INTCONbits.T0IF){
   832  0062  1D0B               	btfss	11,2	;volatile
   833  0063  2865               	goto	u7_21
   834  0064  2866               	goto	u7_20
   835  0065                     u7_21:
   836  0065  2877               	goto	i1l67
   837  0066                     u7_20:
   838  0066                     i1l768:
   839                           
   840                           ;main.c: 53:         INTCONbits.T0IF = 0;
   841  0066  110B               	bcf	11,2	;volatile
   842  0067                     i1l770:
   843                           
   844                           ;main.c: 54:         VALOR++;
   845  0067  3001               	movlw	1
   846  0068  00F0               	movwf	??_isr
   847  0069  0870               	movf	??_isr,w
   848  006A  07F6               	addwf	_VALOR,f
   849  006B                     i1l772:
   850                           
   851                           ;main.c: 55:         TMR0 = 250;
   852  006B  30FA               	movlw	250
   853  006C  0081               	movwf	1	;volatile
   854  006D                     i1l774:
   855                           
   856                           ;main.c: 56:         if(VALOR < REGISTRO)
   857  006D  0877               	movf	_REGISTRO,w
   858  006E  0276               	subwf	_VALOR,w
   859  006F  1803               	skipnc
   860  0070  2872               	goto	u8_21
   861  0071  2873               	goto	u8_20
   862  0072                     u8_21:
   863  0072  2875               	goto	i1l65
   864  0073                     u8_20:
   865  0073                     i1l776:
   866                           
   867                           ;main.c: 57:             PORTDbits.RD0 = 1;
   868  0073  1408               	bsf	8,0	;volatile
   869  0074  2876               	goto	i1l66
   870  0075                     i1l65:	
   871                           ;main.c: 58:         else
   872                           
   873                           
   874                           ;main.c: 59:             PORTDbits.RD0 = 0;
   875  0075  1008               	bcf	8,0	;volatile
   876  0076                     i1l66:
   877                           
   878                           ;main.c: 60:         INTCONbits.T0IF = 0;
   879  0076  110B               	bcf	11,2	;volatile
   880  0077                     i1l67:
   881  0077  0873               	movf	??_isr+3,w
   882  0078  008A               	movwf	10
   883  0079  0E72               	swapf	??_isr+2,w
   884  007A  0083               	movwf	3
   885  007B  0EFE               	swapf	btemp,f
   886  007C  0E7E               	swapf	btemp,w
   887  007D  0009               	retfie
   888  007E                     __end_of_isr:
   889  007E                     btemp	set	126	;btemp
   890  007E                     wtemp0	set	126
   891                           
   892                           	psect	intentry
   893  0004                     __pintentry:	
   894                           ;incstack = 0
   895                           ; Regs used in _isr: [wreg+status,2+status,0]
   896                           
   897  0004                     interrupt_function:
   898  007E                     saved_w	set	btemp
   899  0004  00FE               	movwf	btemp
   900  0005  0E03               	swapf	3,w
   901  0006  00F2               	movwf	??_isr+2
   902  0007  080A               	movf	10,w
   903  0008  00F3               	movwf	??_isr+3
   904  0009  120A  118A  2815   	ljmp	_isr
   905                           
   906                           	psect	idloc
   907                           
   908                           ;Config register IDLOC0 @ 0x2000
   909                           ;	unspecified, using default values
   910  2000                     	org	8192
   911  2000  3FFF               	dw	16383
   912                           
   913                           ;Config register IDLOC1 @ 0x2001
   914                           ;	unspecified, using default values
   915  2001                     	org	8193
   916  2001  3FFF               	dw	16383
   917                           
   918                           ;Config register IDLOC2 @ 0x2002
   919                           ;	unspecified, using default values
   920  2002                     	org	8194
   921  2002  3FFF               	dw	16383
   922                           
   923                           ;Config register IDLOC3 @ 0x2003
   924                           ;	unspecified, using default values
   925  2003                     	org	8195
   926  2003  3FFF               	dw	16383
   927                           
   928                           	psect	config
   929                           
   930                           ;Config register CONFIG1 @ 0x2007
   931                           ;	Oscillator Selection bits
   932                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   933                           ;	Watchdog Timer Enable bit
   934                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   935                           ;	Power-up Timer Enable bit
   936                           ;	PWRTE = OFF, PWRT disabled
   937                           ;	RE3/MCLR pin function select bit
   938                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   939                           ;	Code Protection bit
   940                           ;	CP = OFF, Program memory code protection is disabled
   941                           ;	Data Code Protection bit
   942                           ;	CPD = OFF, Data memory code protection is disabled
   943                           ;	Brown Out Reset Selection bits
   944                           ;	BOREN = OFF, BOR disabled
   945                           ;	Internal External Switchover bit
   946                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   947                           ;	Fail-Safe Clock Monitor Enabled bit
   948                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   949                           ;	Low Voltage Programming Enable bit
   950                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   951                           ;	In-Circuit Debugger Mode bit
   952                           ;	DEBUG = 0x1, unprogrammed default
   953  2007                     	org	8199
   954  2007  20D4               	dw	8404
   955                           
   956                           ;Config register CONFIG2 @ 0x2008
   957                           ;	Brown-out Reset Selection bit
   958                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   959                           ;	Flash Program Memory Self Write Enable bits
   960                           ;	WRT = OFF, Write protection off
   961  2008                     	org	8200
   962  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setup

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              5 COMMON     1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Mon Apr 25 18:11:14 2022

                     l83 00C5                       l85 00C9                       l86 00DD  
                     u10 00C9                       u11 00C8                       u90 00F0  
                     u91 00EF                      l700 0099                      l710 00A5  
                    l702 009D                      l720 00AC                      l712 00A8  
                    l704 009E                      l730 00BC                      l722 00AE  
                    l714 00A9                      l706 009F                      l740 00C4  
                    l732 00BE                      l724 00B2                      l716 00AA  
                    l708 00A3                      l742 00D6                      l734 00C0  
                    l726 00B6                      l718 00AB                      l744 00DA  
                    l736 00C1                      l728 00BA                      l680 0082  
                    l738 00C2                      l690 0094                      l682 0083  
                    l692 0095                      l684 008C                      l780 00E3  
                    l694 0096                      l686 0092                      l678 007E  
                    l790 00FE                      l782 00E6                      l696 0097  
                    l688 0093                      l792 0107                      l784 00EA  
                    l698 0098                      l794 010C                      l786 00F0  
                    l778 00DE                      l796 010E                      l788 00F9  
                    l798 0112                      u100 00F9                      u101 00F8  
                    u110 0107                      u111 0106                      u127 00E8  
                    u137 0110                      u147 00D8                      _PR2 0092  
                    _isr 0015                     ?_isr 0070                     i1l65 0075  
                   i1l66 0076                     i1l67 0077                     _TMR0 0001  
                   u2_20 001B                     u2_21 001A                     u3_20 0024  
                   u3_21 0023                     u4_25 002E                     u5_20 0045  
                   u5_21 0044                     u6_25 004F                     u7_20 0066  
                   u7_21 0065                     u8_20 0073                     u8_21 0072  
                   _main 00DE                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l750 001B                    i1l760 004B                    i1l752 0024  
                  i1l770 0067                    i1l762 005D                    i1l754 002A  
                  i1l772 006B                    i1l764 0061                    i1l756 003C  
                  i1l748 0015                    i1l774 006D                    i1l758 0045  
                  i1l766 0062                    i1l776 0073                    i1l768 0066  
                  _VALOR 0076                    _PORTA 0005                    _PORTD 0008  
                  _TRISA 0085                    _TRISD 0088                    _setup 007E  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0119                   ??_main 0075  
                 _ADRESH 001E                   _CCPR1L 0015                   _CCPR2L 001B  
                 ?_setup 0070                   _ANSELH 0189                   saved_w 007E  
__end_of__initialization 0011           __pcstackCOMMON 0070            __end_of_setup 00DE  
         _OPTION_REGbits 0081                  ??_setup 0074               __pmaintext 00DE  
             __pintentry 0004                  __ptext1 007E                  __ptext2 0015  
              _T2CONbits 0012     end_of_initialization 0011                _PORTDbits 0008  
              _TRISCbits 0087              _CCP1CONbits 0017              _CCP2CONbits 001D  
    start_initialization 000F              __end_of_isr 007E              __pbssCOMMON 0076  
              ___latbits 0002        interrupt_function 0004                 _PIE1bits 008C  
               _REGISTRO 0077                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F  
